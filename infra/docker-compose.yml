services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: Dockerfile.backend
    container_name: backend
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    environment:
      - KAFKA_BROKER=kafka:29092
      - DB_URL=mongodb://mongo:27017
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started
    restart: unless-stopped

  consumer:
    build:
      context: ..
      dockerfile: consumer/Dockerfile.consumer
    container_name: consumer
    command: python consumer.py
    working_dir: /app
    volumes:
      - ../consumer:/app
    environment:
      - KAFKA_BROKER=kafka:29092
      - DB_URL=mongodb://mongo:27017
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_started
    restart: unless-stopped

  frontend:
    build:
      context: ..
      dockerfile: Dockerfile.frontend
    container_name: frontend
    ports:
      - "7860:7860"
    environment:
      - API_BASE_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

volumes:
  mongo-data:
